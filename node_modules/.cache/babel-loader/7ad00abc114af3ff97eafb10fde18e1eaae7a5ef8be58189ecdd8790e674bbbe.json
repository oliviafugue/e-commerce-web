{"ast":null,"code":"var _jsxFileName = \"/Users/olivia23/Downloads/React/e-commerce-web/src/contexts/user.context.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from \"react\";\nimport { onAuthStateChangedListener, signOutUser } from \"../utilities/firebase/firebase\";\n\n//create a context variable - store value, set an intial value - 内容是下面useState需要的两个param\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext({\n  currentUser: null,\n  setCurrentUser: () => null\n});\n\n//SomeContext.provider - context provider is the actual component to use inside index.js, wrap components that need to use the value of the context provider; work together with useState\nexport const UserProvider = props => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const value = {\n    currentUser,\n    setCurrentUser\n  };\n\n  //auth stage change - user login or logout\n  //实现component mount时initialize listener to the auth state, 之后每次auth state change都会triger这个listener\n  useEffect(() => {\n    const unsubscribe = onAuthStateChangedListener(user => {\n      console.log(user);\n    });\n    return unsubscribe;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: value,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 12\n  }, this);\n};\n_s(UserProvider, \"Y5F2pQQk2LZA5WRO2+bvRm5iRuo=\");\n_c = UserProvider;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","onAuthStateChangedListener","signOutUser","UserContext","currentUser","setCurrentUser","UserProvider","props","value","unsubscribe","user","console","log","children"],"sources":["/Users/olivia23/Downloads/React/e-commerce-web/src/contexts/user.context.jsx"],"sourcesContent":["import { createContext, useState, useEffect } from \"react\";\nimport { onAuthStateChangedListener, signOutUser } from \"../utilities/firebase/firebase\";\n\n//create a context variable - store value, set an intial value - 内容是下面useState需要的两个param\nexport const UserContext = createContext({\n    currentUser: null,\n    setCurrentUser: () => null,\n});\n\n//SomeContext.provider - context provider is the actual component to use inside index.js, wrap components that need to use the value of the context provider; work together with useState\nexport const UserProvider = (props) => {\n    const [currentUser, setCurrentUser] = useState(null);\n    const value = { currentUser, setCurrentUser }; \n\n    //auth stage change - user login or logout\n    //实现component mount时initialize listener to the auth state, 之后每次auth state change都会triger这个listener\n    useEffect(() => {\n        const unsubscribe = onAuthStateChangedListener((user) => {\n            console.log(user)\n        });\n        return unsubscribe;\n    }, [])\n\n    return <UserContext.Provider value={value}>{props.children}</UserContext.Provider>\n}"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SAASC,0BAA0B,EAAEC,WAAW,QAAQ,gCAAgC;;AAExF;AAAA;AACA,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC;EACrCM,WAAW,EAAE,IAAI;EACjBC,cAAc,EAAE,MAAM;AAC1B,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAAA;EACnC,MAAM,CAACH,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAMS,KAAK,GAAG;IAAEJ,WAAW;IAAEC;EAAe,CAAC;;EAE7C;EACA;EACAL,SAAS,CAAC,MAAM;IACZ,MAAMS,WAAW,GAAGR,0BAA0B,CAAES,IAAI,IAAK;MACrDC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACrB,CAAC,CAAC;IACF,OAAOD,WAAW;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAO,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAED,KAAM;IAAA,UAAED,KAAK,CAACM;EAAQ;IAAA;IAAA;IAAA;EAAA,QAAwB;AACtF,CAAC;AAAA,GAdYP,YAAY;AAAA,KAAZA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}