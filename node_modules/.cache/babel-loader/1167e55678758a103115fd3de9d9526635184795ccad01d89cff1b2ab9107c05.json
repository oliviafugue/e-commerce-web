{"ast":null,"code":"var _jsxFileName = \"/Users/olivia23/Downloads/React/e-commerce-web/src/routes/sign-in/sign-in.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { getRedirectResult } from \"@firebase/auth\";\nimport { auth, signInWithGooglePopup, signInWithGoogleRedirect, createUserDocumentFromAuth } from \"../../utilities/firebase/firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignIn = () => {\n  _s();\n  useEffect(async () => {\n    const response = await getRedirectResult(auth); //auth相当于一个bank，存着所有authentication instance info\n    console.log(response);\n  }, []); //给一个空array means component 第一次mount的时候运行里面的callback func\n\n  const logGoogleUser = async () => {\n    const response = await signInWithGooglePopup();\n    console.log(response);\n    //response包含accessToken generated by Firebase, for making CRUD requests\n    const userDocRef = await createUserDocumentFromAuth(response.user);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"This is a sign-in page.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: logGoogleUser,\n      children: \" Google Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: signInWithGoogleRedirect,\n      children: \" Google Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(SignIn, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = SignIn;\nexport default SignIn;\nvar _c;\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"names":["useEffect","getRedirectResult","auth","signInWithGooglePopup","signInWithGoogleRedirect","createUserDocumentFromAuth","SignIn","response","console","log","logGoogleUser","userDocRef","user"],"sources":["/Users/olivia23/Downloads/React/e-commerce-web/src/routes/sign-in/sign-in.jsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport { getRedirectResult } from \"@firebase/auth\";\n\nimport { auth, signInWithGooglePopup, signInWithGoogleRedirect, createUserDocumentFromAuth } from \"../../utilities/firebase/firebase\";\n\nconst SignIn = () => {\n    useEffect(async () => {\n        const response = await getRedirectResult(auth); //auth相当于一个bank，存着所有authentication instance info\n        console.log(response);\n    }, []) //给一个空array means component 第一次mount的时候运行里面的callback func\n\n    const logGoogleUser = async () => {\n        const response = await signInWithGooglePopup();\n        console.log(response)\n        //response包含accessToken generated by Firebase, for making CRUD requests\n        const userDocRef = await createUserDocumentFromAuth(response.user)\n        \n    }\n\n    return (\n        <div>\n            <h1>This is a sign-in page.</h1>\n            <button onClick={logGoogleUser}> Google Sign In</button>\n            <button onClick={signInWithGoogleRedirect}> Google Sign In</button>\n        </div>\n    )\n}\n\nexport default SignIn;"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,iBAAiB,QAAQ,gBAAgB;AAElD,SAASC,IAAI,EAAEC,qBAAqB,EAAEC,wBAAwB,EAAEC,0BAA0B,QAAQ,mCAAmC;AAAC;AAEtI,MAAMC,MAAM,GAAG,MAAM;EAAA;EACjBN,SAAS,CAAC,YAAY;IAClB,MAAMO,QAAQ,GAAG,MAAMN,iBAAiB,CAACC,IAAI,CAAC,CAAC,CAAC;IAChDM,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC,EAAC;;EAEP,MAAMG,aAAa,GAAG,YAAY;IAC9B,MAAMH,QAAQ,GAAG,MAAMJ,qBAAqB,EAAE;IAC9CK,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IACrB;IACA,MAAMI,UAAU,GAAG,MAAMN,0BAA0B,CAACE,QAAQ,CAACK,IAAI,CAAC;EAEtE,CAAC;EAED,oBACI;IAAA,wBACI;MAAA,UAAI;IAAuB;MAAA;MAAA;MAAA;IAAA,QAAK,eAChC;MAAQ,OAAO,EAAEF,aAAc;MAAA,UAAC;IAAe;MAAA;MAAA;MAAA;IAAA,QAAS,eACxD;MAAQ,OAAO,EAAEN,wBAAyB;MAAA,UAAC;IAAe;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACjE;AAEd,CAAC;AAAA,GArBKE,MAAM;AAAA,KAANA,MAAM;AAuBZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}