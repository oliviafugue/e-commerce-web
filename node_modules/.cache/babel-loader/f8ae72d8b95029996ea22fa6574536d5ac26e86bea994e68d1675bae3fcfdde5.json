{"ast":null,"code":"var _jsxFileName = \"/Users/olivia23/Downloads/React/e-commerce-web/src/contexts/cart.context.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\n\n//helper function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst addCartItem = (cartItems, productToAdd) => {\n  //return the item has same id as the one to add\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === productToAdd.id);\n\n  //if found, 不是在现有array element里修改数量，而是return a new element with the spread out and updated quantity field\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === productToAdd.id ? {\n      ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  }\n  //no existing cartItem found, return new array with item added\n  return [...cartItems, {\n    ...productToAdd,\n    quantity: 1\n  }];\n};\nexport const CartContext = /*#__PURE__*/createContext({\n  isCartOpen: false,\n  setIsCartOpen: () => {},\n  cartItems: [],\n  addItemToCart: () => {},\n  cartCount: 0,\n  setCartCount: () => {}\n});\nexport const CartProvider = props => {\n  _s();\n  const [isCartOpen, setIsCartOpen] = useState();\n  const [cartItems, setCartItems] = useState([]);\n  const [cartCount, setCartCount] = useState(0);\n\n  //check cartItems，决定是create new item or add quantity to existing item\n  const addItemToCart = productToAdd => {\n    setCartItems(addCartItem(cartItems, productToAdd)); //setter func里call另一个helper func\n  };\n\n  const cartItemCount = items => {\n    const itemQuantity = [];\n    items.map(item => itemQuantity.push(item.quantity));\n    itemQuantity.reduce((accumulator, currentElement) => {\n      setCartCount(accumulator + currentElement);\n    }, 0);\n  };\n  const value = {\n    isCartOpen,\n    setIsCartOpen,\n    cartItems,\n    addItemToCart,\n    cartCount,\n    cartItemCount\n  }; //include the function in the value\n\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 10\n  }, this);\n};\n_s(CartProvider, \"L+dWOdEb+Gm5rvyFrpUwThrKCTs=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useState","addCartItem","cartItems","productToAdd","existingCartItem","find","cartItem","id","map","quantity","CartContext","isCartOpen","setIsCartOpen","addItemToCart","cartCount","setCartCount","CartProvider","props","setCartItems","cartItemCount","items","itemQuantity","item","push","reduce","accumulator","currentElement","value","children"],"sources":["/Users/olivia23/Downloads/React/e-commerce-web/src/contexts/cart.context.jsx"],"sourcesContent":["import { createContext, useState } from \"react\";\n\n//helper function\nconst addCartItem = (cartItems, productToAdd) => {\n  //return the item has same id as the one to add\n  const existingCartItem = cartItems.find((cartItem) => cartItem.id === productToAdd.id);\n  \n  //if found, 不是在现有array element里修改数量，而是return a new element with the spread out and updated quantity field\n  if(existingCartItem) {\n    return cartItems.map((cartItem) => \n      cartItem.id === productToAdd.id ? {...cartItem, quantity: cartItem.quantity + 1} : cartItem\n    );\n  }\n  //no existing cartItem found, return new array with item added\n  return [...cartItems, {...productToAdd, quantity: 1}];\n};\n\nexport const CartContext = createContext({\n  isCartOpen: false,\n  setIsCartOpen: () => {},\n  cartItems: [],\n  addItemToCart: () => {},\n  cartCount: 0,\n  setCartCount: () => {},\n}); \n\nexport const CartProvider = (props) => {\n  const [isCartOpen, setIsCartOpen] = useState();\n  const [cartItems, setCartItems] = useState([]);\n  const [cartCount, setCartCount] = useState(0);\n\n  //check cartItems，决定是create new item or add quantity to existing item\n  const addItemToCart = (productToAdd) => {\n    setCartItems(addCartItem(cartItems, productToAdd)) //setter func里call另一个helper func\n  };\n\n  const cartItemCount = (items) => {\n    const itemQuantity = [];\n    items.map((item) => itemQuantity.push(item.quantity))\n    itemQuantity.reduce((accumulator, currentElement) => {\n        setCartCount(accumulator + currentElement);\n    }, 0);\n\n}\n\n  const value = {isCartOpen, setIsCartOpen, cartItems, addItemToCart, cartCount, cartItemCount}; //include the function in the value\n\n  return <CartContext.Provider value={value}>{props.children}</CartContext.Provider>\n};"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,QAAQ,OAAO;;AAE/C;AAAA;AACA,MAAMC,WAAW,GAAG,CAACC,SAAS,EAAEC,YAAY,KAAK;EAC/C;EACA,MAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,EAAE,KAAKJ,YAAY,CAACI,EAAE,CAAC;;EAEtF;EACA,IAAGH,gBAAgB,EAAE;IACnB,OAAOF,SAAS,CAACM,GAAG,CAAEF,QAAQ,IAC5BA,QAAQ,CAACC,EAAE,KAAKJ,YAAY,CAACI,EAAE,GAAG;MAAC,GAAGD,QAAQ;MAAEG,QAAQ,EAAEH,QAAQ,CAACG,QAAQ,GAAG;IAAC,CAAC,GAAGH,QAAQ,CAC5F;EACH;EACA;EACA,OAAO,CAAC,GAAGJ,SAAS,EAAE;IAAC,GAAGC,YAAY;IAAEM,QAAQ,EAAE;EAAC,CAAC,CAAC;AACvD,CAAC;AAED,OAAO,MAAMC,WAAW,gBAAGX,aAAa,CAAC;EACvCY,UAAU,EAAE,KAAK;EACjBC,aAAa,EAAE,MAAM,CAAC,CAAC;EACvBV,SAAS,EAAE,EAAE;EACbW,aAAa,EAAE,MAAM,CAAC,CAAC;EACvBC,SAAS,EAAE,CAAC;EACZC,YAAY,EAAE,MAAM,CAAC;AACvB,CAAC,CAAC;AAEF,OAAO,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAAA;EACrC,MAAM,CAACN,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,EAAE;EAC9C,MAAM,CAACE,SAAS,EAAEgB,YAAY,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;;EAE7C;EACA,MAAMa,aAAa,GAAIV,YAAY,IAAK;IACtCe,YAAY,CAACjB,WAAW,CAACC,SAAS,EAAEC,YAAY,CAAC,CAAC,EAAC;EACrD,CAAC;;EAED,MAAMgB,aAAa,GAAIC,KAAK,IAAK;IAC/B,MAAMC,YAAY,GAAG,EAAE;IACvBD,KAAK,CAACZ,GAAG,CAAEc,IAAI,IAAKD,YAAY,CAACE,IAAI,CAACD,IAAI,CAACb,QAAQ,CAAC,CAAC;IACrDY,YAAY,CAACG,MAAM,CAAC,CAACC,WAAW,EAAEC,cAAc,KAAK;MACjDX,YAAY,CAACU,WAAW,GAAGC,cAAc,CAAC;IAC9C,CAAC,EAAE,CAAC,CAAC;EAET,CAAC;EAEC,MAAMC,KAAK,GAAG;IAAChB,UAAU;IAAEC,aAAa;IAAEV,SAAS;IAAEW,aAAa;IAAEC,SAAS;IAAEK;EAAa,CAAC,CAAC,CAAC;;EAE/F,oBAAO,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAEQ,KAAM;IAAA,UAAEV,KAAK,CAACW;EAAQ;IAAA;IAAA;IAAA;EAAA,QAAwB;AACpF,CAAC;AAAC,GAtBWZ,YAAY;AAAA,KAAZA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}