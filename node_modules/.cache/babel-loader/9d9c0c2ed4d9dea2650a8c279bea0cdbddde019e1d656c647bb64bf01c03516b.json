{"ast":null,"code":"var _jsxFileName = \"/Users/olivia23/Downloads/React/e-commerce-web/src/contexts/categories.context.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from 'react';\n\n// import { addCollectionAndDocuments } from '../utilities/firebase/firebase';\nimport { getCategoriesAndDocuments } from '../utilities/firebase/firebase';\nimport SHOP_DATA from '../shop-data'; //json里是一个array,这里assign a variable name to use\n\n//create new context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CategoriesContext = /*#__PURE__*/createContext({\n  categoriesMap: {}\n});\n\n//context provider\nexport const CategoriesProvider = props => {\n  _s();\n  //useState to assign json value to context\n  const [categoriesMap, setCategoriesMap] = useState({});\n\n  // 只需要add一次data to firbase; 一般不会在front end做这事儿\n  // useEffect(() => {\n  //     addCollectionAndDocuments('categories', SHOP_DATA);\n  // }, []);\n\n  useEffect(() => {\n    const getCategoryMap = async () => {\n      //在useEffect里不能直接call async, 一个新的function, 里面await utility function\n      const categoryMap = await getCategoriesAndDocuments();\n      console.log(categoryMap);\n      setCategoriesMap(categoryMap);\n    };\n    getCategoryMap();\n  }, []);\n  const value = {\n    categoriesMap\n  }; //state和setState必须成对使用？\n\n  return /*#__PURE__*/_jsxDEV(CategoriesContext.Provider, {\n    value: value,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 12\n  }, this);\n};\n_s(CategoriesProvider, \"B6VDCmsskkW5dNHt4tnOS3PdQcE=\");\n_c = CategoriesProvider;\nvar _c;\n$RefreshReg$(_c, \"CategoriesProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","getCategoriesAndDocuments","SHOP_DATA","CategoriesContext","categoriesMap","CategoriesProvider","props","setCategoriesMap","getCategoryMap","categoryMap","console","log","value","children"],"sources":["/Users/olivia23/Downloads/React/e-commerce-web/src/contexts/categories.context.jsx"],"sourcesContent":["import { createContext, useState, useEffect } from 'react';\n\n// import { addCollectionAndDocuments } from '../utilities/firebase/firebase';\nimport { getCategoriesAndDocuments } from '../utilities/firebase/firebase';\nimport SHOP_DATA from '../shop-data'; //json里是一个array,这里assign a variable name to use\n\n//create new context\nexport const CategoriesContext = createContext({\n    categoriesMap: {},\n})\n\n//context provider\nexport const CategoriesProvider = (props) => {\n    //useState to assign json value to context\n    const [categoriesMap, setCategoriesMap] = useState({});\n\n    // 只需要add一次data to firbase; 一般不会在front end做这事儿\n    // useEffect(() => {\n    //     addCollectionAndDocuments('categories', SHOP_DATA);\n    // }, []);\n\n    useEffect(() => {\n        const getCategoryMap = async () =>{ //在useEffect里不能直接call async, 一个新的function, 里面await utility function\n            const categoryMap = await getCategoriesAndDocuments(); \n            console.log(categoryMap);\n            setCategoriesMap(categoryMap);\n        }\n\n        getCategoryMap();\n    }, [])\n\n\n\n    const value = { categoriesMap }; //state和setState必须成对使用？\n\n    return <CategoriesContext.Provider value={value}>{props.children}</CategoriesContext.Provider>\n}  "],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAE1D;AACA,SAASC,yBAAyB,QAAQ,gCAAgC;AAC1E,OAAOC,SAAS,MAAM,cAAc,CAAC,CAAC;;AAEtC;AAAA;AACA,OAAO,MAAMC,iBAAiB,gBAAGL,aAAa,CAAC;EAC3CM,aAAa,EAAE,CAAC;AACpB,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,kBAAkB,GAAIC,KAAK,IAAK;EAAA;EACzC;EACA,MAAM,CAACF,aAAa,EAAEG,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEtD;EACA;EACA;EACA;;EAEAC,SAAS,CAAC,MAAM;IACZ,MAAMQ,cAAc,GAAG,YAAW;MAAE;MAChC,MAAMC,WAAW,GAAG,MAAMR,yBAAyB,EAAE;MACrDS,OAAO,CAACC,GAAG,CAACF,WAAW,CAAC;MACxBF,gBAAgB,CAACE,WAAW,CAAC;IACjC,CAAC;IAEDD,cAAc,EAAE;EACpB,CAAC,EAAE,EAAE,CAAC;EAIN,MAAMI,KAAK,GAAG;IAAER;EAAc,CAAC,CAAC,CAAC;;EAEjC,oBAAO,QAAC,iBAAiB,CAAC,QAAQ;IAAC,KAAK,EAAEQ,KAAM;IAAA,UAAEN,KAAK,CAACO;EAAQ;IAAA;IAAA;IAAA;EAAA,QAA8B;AAClG,CAAC;AAAA,GAxBYR,kBAAkB;AAAA,KAAlBA,kBAAkB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}