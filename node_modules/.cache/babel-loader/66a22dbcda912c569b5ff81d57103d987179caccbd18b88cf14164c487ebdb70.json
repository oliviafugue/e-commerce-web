{"ast":null,"code":"//// a place to store all firebase related functions ////\n\nimport { initializeApp } from \"firebase/app\";\nimport { GoogleAuthProvider, getAuth, signInWithRedirect, signInWithPopup, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged } from \"firebase/auth\";\nimport { getFirestore, doc, getDoc, setDoc, collection, writeBatch } from 'firebase/firestore';\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCBAXURrkLZ90ZYYW4vc9MRctQXDiEFFQw\",\n  authDomain: \"corwn-ecommerce-db.firebaseapp.com\",\n  projectId: \"corwn-ecommerce-db\",\n  storageBucket: \"corwn-ecommerce-db.appspot.com\",\n  messagingSenderId: \"764195936789\",\n  appId: \"1:764195936789:web:c888eb61daf5485f234c1c\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// setup Google provider - each app can have more than one provider\nconst provider = new GoogleAuthProvider(); //new instance\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\n\n// setup auth - each app can only has one authentication method\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, provider);\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, provider);\n\n// setup database\nexport const db = getFirestore();\n\n//use collection and writeBatch add objects in shop-data to firebase db\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  //objects-每个category\n  const collectionRef = collection(db, collectionKey);\n  const batch = writeBatch(db);\n  objectsToAdd.forEach(object => {\n    const docRef = doc(collectionRef, object.title.toLowerCase()); //2 params: collection reference/name, doc/category name\n    batch.set(docRef, object); //2 params: key, object value\n  });\n\n  await batch.commit();\n  console.log('done');\n};\n\n// create document in database\nexport const createUserDocumentFromAuth = async (userAuth, additionalInfo) => {\n  if (!userAuth) return;\n  // create reference - a location in database\n  const userDocRef = doc(db, 'users', userAuth.uid); //三个param: database, collection name, special id of the doc\n\n  // use doc reference to read doc\n  const userSnapshot = await getDoc(userDocRef);\n  console.log(userSnapshot);\n  console.log(userSnapshot.exists()); //return false; collection里还没有这个document\n\n  //if user data does NOT exist - set it up in database-setDoc\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInfo\n      });\n    } catch (error) {\n      console.log('error creating the user', error.message);\n    }\n  }\n\n  //if user exists\n  return userDocRef;\n};\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await signInWithEmailAndPassword(auth, email, password);\n};\nexport const signOutUser = async () => await signOut(auth);\nexport const onAuthStateChangedListener = callback => onAuthStateChanged(auth, callback);","map":{"version":3,"names":["initializeApp","GoogleAuthProvider","getAuth","signInWithRedirect","signInWithPopup","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","getFirestore","doc","getDoc","setDoc","collection","writeBatch","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","provider","setCustomParameters","prompt","auth","signInWithGooglePopup","signInWithGoogleRedirect","db","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","batch","forEach","object","docRef","title","toLowerCase","set","commit","console","log","createUserDocumentFromAuth","userAuth","additionalInfo","userDocRef","uid","userSnapshot","exists","displayName","email","createdAt","Date","error","message","createAuthUserWithEmailAndPassword","password","signInAuthUserWithEmailAndPassword","signOutUser","onAuthStateChangedListener","callback"],"sources":["/Users/olivia23/Downloads/React/e-commerce-web/src/utilities/firebase/firebase.jsx"],"sourcesContent":["//// a place to store all firebase related functions ////\n\nimport { initializeApp } from \"firebase/app\";\nimport { GoogleAuthProvider, getAuth, signInWithRedirect, signInWithPopup, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged } from \"firebase/auth\";\nimport { getFirestore, doc, getDoc, setDoc, collection, writeBatch } from 'firebase/firestore';\n\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCBAXURrkLZ90ZYYW4vc9MRctQXDiEFFQw\",\n  authDomain: \"corwn-ecommerce-db.firebaseapp.com\",\n  projectId: \"corwn-ecommerce-db\",\n  storageBucket: \"corwn-ecommerce-db.appspot.com\",\n  messagingSenderId: \"764195936789\",\n  appId: \"1:764195936789:web:c888eb61daf5485f234c1c\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// setup Google provider - each app can have more than one provider\nconst provider = new GoogleAuthProvider(); //new instance\nprovider.setCustomParameters({\n    prompt: 'select_account'\n});\n\n// setup auth - each app can only has one authentication method\nexport const auth = getAuth(); \nexport const signInWithGooglePopup = () => signInWithPopup(auth, provider)\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, provider)\n\n// setup database\nexport const db = getFirestore();\n\n//use collection and writeBatch add objects in shop-data to firebase db\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => { //objects-每个category\n  const collectionRef = collection(db, collectionKey);\n  const batch = writeBatch(db);\n\n  objectsToAdd.forEach((object) => {\n    const docRef = doc(collectionRef, object.title.toLowerCase()); //2 params: collection reference/name, doc/category name\n    batch.set(docRef, object); //2 params: key, object value\n  });\n\n  await batch.commit();\n  console.log('done');\n}; \n\n// create document in database\nexport const createUserDocumentFromAuth = async (userAuth, additionalInfo) => {\n  if (!userAuth) return;\n  // create reference - a location in database\n  const userDocRef = doc(db, 'users', userAuth.uid) //三个param: database, collection name, special id of the doc\n\n  // use doc reference to read doc\n  const userSnapshot = await getDoc(userDocRef);\n  console.log(userSnapshot);\n  console.log(userSnapshot.exists()) //return false; collection里还没有这个document\n\n   //if user data does NOT exist - set it up in database-setDoc\n   if(!userSnapshot.exists()) {\n     const { displayName, email } = userAuth;\n     const createdAt = new Date();\n\n     try {\n       await setDoc(userDocRef, {displayName, email, createdAt, ...additionalInfo});\n     } catch (error) {\n       console.log('error creating the user', error.message)\n     }\n   }\n\n   //if user exists\n   return userDocRef;\n};\n\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\n\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await signInWithEmailAndPassword(auth, email, password);\n};\n\nexport const signOutUser = async () => await signOut(auth);\n\n\nexport const onAuthStateChangedListener =(callback) => onAuthStateChanged(auth, callback);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}